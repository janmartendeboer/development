version: "3.9"
name: dev

x-env-files: &env-files
  env_file:
    - .env
    - .env.local

services:
  php:
    <<: *env-files
    user: "${UID}:${GID}"
    build:
      context: docker/php
      args:
        UID: $UID
        GID: $GID
        PHP_VERSION: 8.2
        PHP_EXTENSIONS: apcu intl opcache zip pdo_mysql xdebug
    environment:
      - "HOME=${PHP_HOME}"
    volumes:
      - "${PWD}:/app"

  composer:
    extends:
      service: php
    entrypoint: composer
    build:
      args:
        COMPOSER_VERSION: 2
        PHP_EXTENSIONS: apcu intl opcache zip pdo_mysql
    environment:
      - "COMPOSER_HOME=${PHP_COMPOSER_HOME}"
    volumes:
      - "${COMPOSER_HOME}:${PHP_COMPOSER_HOME}"

  composer2:
    extends:
      service: composer
    build:
      args:
        COMPOSER_VERSION: 2

  symfony:
    extends:
      service: composer
    build:
      args:
        SYMFONY: 1
        GIT: 1
        PHP_EXTENSIONS: apcu intl opcache zip pdo_mysql
        PHP_INIS: symfony.ini symfony-recommended.ini
    entrypoint: symfony

  nvm:
    <<: *env-files
    user: "${UID}:${GID}"
    build:
      context: docker/node
      args:
        UID: $UID
        GID: $GID
        APP: nvm
        DEBUG: "${DEBUG:-0}"
    volumes:
      - "${NVM_HOME}/alias:/home/app/.nvm/alias"
      - "${NVM_HOME}/versions:/home/app/.nvm/versions"
      - "${NVM_TMP}/.nvmrc:/home/app/.nvm/.nvmrc"
      - "${PWD}:/app"

  node:
    extends:
      service: nvm
    build:
      args:
        APP: node

  npm:
    extends:
      service: nvm
    build:
      args:
        APP: npm
